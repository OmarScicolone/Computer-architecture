	.data
a: 	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa   
	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa
	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa
	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa
	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa
	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa
	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa
	.word16 5, 0x01a1, 0x2f, 17, 0x2fe0, 1, 0x96a4, 0xe82f, 3, 0x2f, 0x012f, 0xaaaa
	.word16 5, 0x01a1, 0x2f2f, 17
	
val: .byte 0x2f 			
res: .space 1				

	.text
main:
	dadd R1, R0, R0 		
	dadd R5, R0, R0			
	dadd R6, R0, R0 		
	daddi R7, R0, 100 		
	
	daddi R8, R0, 0Xff		

	lbu R3, val(R0)			 
	lhu R2, a(R1)			

loop:
	and R4, R8, R2			; and tra R2 e R8 per avere solo i bit meno significativi
	bne R4, R3, j1  		
	daddi R5, R5, 1 		
	
j1:	dsrl R2, R2, 8  		; shift per valutare i bit pi√π significativi
	bne R2, R3, j2			
	daddi R5, R5, 1			

j2:	daddi R6, R6, 1			
	beq R6, R7, fine		
	daddi R1, R1, 2 		
	lhu R2, a(R1) 			
	j loop					

fine:
	sb R5, res(R0)
	HALT
	
	